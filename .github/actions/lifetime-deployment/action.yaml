name: LifeTime Deployment
description: Deploys OutSystems Applications to target Environment

inputs:
  source-environment-label:
    required: true
    type: string
  destination-environment-label:
    required: true
    type: string
  include-test-applications:
    type: boolean
    default: false
  use-2step-deployment:
    type: boolean
    default: false
  
runs: 
  using: "composite"
  steps:

    # Download current pipeline artifacts
    - uses: ./.github/actions/download-trigger-manifest

    - uses: ./.github/actions/install-python-package

    # ******************************************************************
    # Step: Deploy to target environment (using manifest)
    # ******************************************************************
    # Deploy application list to target environment using manifest
    # ******************************************************************
    - name: 'Deploy to ${{ inputs.destination-environment-label }} environment'
      if: ${{ inputs.include-test-applications == 'true' }}
      shell: bash
      run: >
        python -m outsystems.pipeline.deploy_tags_to_target_env_with_manifest
        --artifacts "${{ vars.ARTIFACTS_FOLDER }}" 
        --lt_url ${{ vars.LIFETIME_HOSTNAME }}
        --lt_token ${{ secrets.LIFETIME_SERVICE_ACCOUNT_TOKEN }}
        --lt_api_version ${{ vars.LIFETIME_API_VERSION }}
        --source_env_label "${{ inputs.source-environment-label }}"
        --destination_env_label "${{ inputs.destination-environment-label }}"
        --include_test_apps
        --manifest_file "${{ vars.ARTIFACTS_FOLDER }}/${{ vars.MANIFEST_FOLDER }}/${{ vars.MANIFEST_FILE }}"

    - name: 'Deploy to ${{ inputs.destination-environment-label }} environment'
      if: ${{ inputs.include-test-applications == 'false' }}
      shell: bash
      run: >
        python -m outsystems.pipeline.deploy_tags_to_target_env_with_manifest
        --artifacts "${{ vars.ARTIFACTS_FOLDER }}" 
        --lt_url "${{ vars.LIFETIME_HOSTNAME }}"
        --lt_token ${{ secrets.LIFETIME_SERVICE_ACCOUNT_TOKEN }}
        --lt_api_version "${{ vars.LIFETIME_API_VERSION }}"
        --source_env_label "${{ inputs.source-environment-label }}"
        --destination_env_label "${{ inputs.destination-environment-label }}"
        --manifest_file "${{ vars.ARTIFACTS_FOLDER }}/${{ vars.MANIFEST_FOLDER }}/${{ vars.MANIFEST_FILE }}"

    # ******************************************************************
    # Step: Apply configuration values
    # ******************************************************************
    # Apply configuration values (if any) to target environment
    # ******************************************************************
    - uses: ./.github/actions/apply-configuration-values
      if: ${{ inputs.use-2step-deployment == 'false' }}
      with:
        target-environment-label: ${{ inputs.destination-environment-label }}

    # ******************************************************************
    # Step: Publish deployment conflicts
    # ******************************************************************
    # Check if there any Deployment Conflicts and archive it
    # ******************************************************************
    #- name: Archive deployment conflicts on failure
    #  if: failure()
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: DeploymentConflicts
    #    path: ${{ vars.ARTIFACTS_FOLDER }}/DeploymentConflicts