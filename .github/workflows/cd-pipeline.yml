name: GitHub-CD-Pipeline

on:
  workflow_dispatch:
    inputs:
      TriggerManifest:
        description: 'Trigger manifest artifact (in JSON format) for the current pipeline run.'
        required: true
        type: string
      TriggeredBy:
        description: 'Name of LifeTime user that triggered the pipeline remotely.'
        required: false
        type: string

env:
  ARTIFACTS_FOLDER: ${{ vars.ARTIFACTS_FOLDER }}
  MANIFEST_FOLDER: ${{ vars.MANIFEST_FOLDER }}
  MANIFEST_FILE: ${{ vars.MANIFEST_FILE }}
  LIFETIME_HOSTNAME: ${{ vars.LIFETIME_HOSTNAME }}
  LIFETIME_API_VERSION: ${{ vars.LIFETIME_API_VERSION }}
  LIFETIME_SERVICE_ACCOUNT_TOKEN: ${{ secrets.LIFETIME_SERVICE_ACCOUNT_TOKEN }}
  ENVIRONMENT_DEVELOPMENT_LABEL: ${{ vars.ENVIRONMENT_DEVELOPMENT_LABEL }}
  ENVIRONMENT_REGRESSION_LABEL: ${{ vars.ENVIRONMENT_REGRESSION_LABEL }}
  ENVIRONMENT_ACCEPTANCE_LABEL: ${{ vars.ENVIRONMENT_ACCEPTANCE_LABEL }}
  ENVIRONMENT_PREPRODUCTION_LABEL: ${{ vars.ENVIRONMENT_PREPRODUCTION_LABEL }}
  ENVIRONMENT_PRODUCTION_LABEL: ${{ vars.ENVIRONMENT_PRODUCTION_LABEL }}
  OS_PACKAGE_VERSION: ${{ vars.OS_PACKAGE_VERSION }}
  PYTHON_VERSION: ${{ vars.PYTHON_VERSION }}

jobs:


  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/publish-trigger-manifest


  get_and_deploy_latest_tags:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/install-python-package

      - uses: ./.github/actions/lifetime-deployment
        with:
          source-environment-label: ${{ env.ENVIRONMENT_DEVELOPMENT_LABEL }}
          destination-environment-label: ${{ env.ENVIRONMENT_REGRESSION_LABEL }}
          include-test-applications: true
